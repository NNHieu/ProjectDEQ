# @package _global_

# to execute this experiment run:
# python run.py experiment=fixedpoint.yaml

defaults:
  - override /mode: exp.yaml
  - override /trainer: default.yaml
  - override /model: fixedpoint.yaml
  - override /datamodule: dim2_rho2.yaml
  - override /callbacks: null
  - override /logger: null

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

# name of the run determines folder name in logs
# it's also accessed by loggers
name: "perturb_regularize_${model.arch.core}${model.arch.in_features}_${model.arch.h_features}_${model.arch.block.activation}_${seed}_${model.arch.f_solver}_${model.perturb_std}_${model.perturb_weight}"

seed: 12345

model:
  arch:
    in_features: ${datamodule.dim}
    f_thres: 60
    b_thres: 60
    in_trans: linear
    block:
      activation: tanh
  init_std: 1.
  perturb_std: 0.5
  perturb_weight: 0.1

trainer:
  min_epochs: 1
  max_epochs: 250

datamodule:
  train_batch_size: 50
  test_batch_size: 50

callbacks:
  model_checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    monitor: "val/acc"
    mode: "max"
    save_top_k: 1
    save_last: True
    verbose: False
    dirpath: "checkpoints/"
    filename: "epoch_{epoch:03d}"
    auto_insert_metric_name: False
  rich_progress_bar:
    _target_: pytorch_lightning.callbacks.RichProgressBar
